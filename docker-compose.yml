name: redis-stack

services:
  redis:
    image: redis:alpine
    container_name: redis-cache
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - chatbot-net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3
    restart: unless-stopped

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redis-insight
    ports:
      - "5540:5540"
    volumes:
      - redis-insight-data:/data
    depends_on:
      - redis
    networks:
      - chatbot-net
    restart: unless-stopped

  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
    networks:
      - chatbot-net
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__WEB_UI__ENABLED=true
    # healthcheck:
    #   test: ["CMD-SHELL", "python3 -c 'import urllib.request; urllib.request.urlopen(\"http://localhost:6333/collections\").read()' || exit 1"]
    #   interval: 20s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 40s
    restart: unless-stopped

  ingestion:
    build:
      context: .
      dockerfile: modules/ingestion/Dockerfile
    container_name: ingestion
    depends_on:
      - redis
      - qdrant
    networks:
      - chatbot-net
    environment:
      - REDIS_HOSTS=redis
      - REDIS_PORTS=6379
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - HF_TOKEN=${HF_TOKEN}
    restart: unless-stopped

volumes:
  redis_data:
    driver: local
  redis-insight-data:
    driver: local
  qdrant_data:
    driver: local
    
networks:
  chatbot-net:
    driver: bridge
