def build_prompt(lang: str, context: str, history: list, user_input: str):
    # T·∫°o system prompt ƒë·ªông theo ng√¥n ng·ªØ
    system_prompt = f"""
    B·∫°n l√† tr·ª£ l√Ω AI. Khi ng∆∞·ªùi d√πng h·ªèi, h√£y:
    - Tr·∫£ l·ªùi ng·∫Øn g·ªçn, t·∫≠p trung v√†o c√¢u h·ªèi c·ªßa ng∆∞·ªùi d√πng.
    - Kh√¥ng l·∫∑p l·∫°i h∆∞·ªõng d·∫´n ho·∫∑c d·ªØ li·ªáu n·ªÅn.
    - N·∫øu l√† ch√†o h·ªèi, ch·ªâ c·∫ßn ƒë√°p l·∫°i ng·∫Øn g·ªçn, th√¢n thi·ªán (v√≠ d·ª•: 'Xin ch√†o üëã B·∫°n c·∫ßn h·ªó tr·ª£ g√¨?').
    - N·∫øu l√† y√™u c·∫ßu vi·∫øt code, ch·ªâ tr·∫£ v·ªÅ ƒëo·∫°n code ƒë√∫ng duy nh·∫•t v√† gi·∫£i th√≠ch ng·∫Øn g·ªçn n·∫øu c·∫ßn.
    - Kh√¥ng l·∫∑p l·∫°i c√¢u h·ªèi, kh√¥ng th√™m th√¥ng tin kh√¥ng li√™n quan, kh√¥ng lan man.
    - C√°c c√¢u h·ªèi kh√°c tr·∫£ l·ªùi ƒë√∫ng tr·ªçng t√¢m.
    - Tr·∫£ l·ªùi b·∫±ng ng√¥n ng·ªØ '{lang}'.

    D·ªØ li·ªáu n·ªÅn:
    {context}
    """
    prompt = system_prompt
    for msg in history:
        role = (msg.get("role") or "user").capitalize()
        content = msg.get("content") or ""
        prompt += f"\n{role}: {content}"

    # Th√™m tin nh·∫Øn m·ªõi t·ª´ ng∆∞·ªùi d√πng 
    prompt += f"\nNg∆∞·ªùi d√πng h·ªèi: {user_input}\nTr·ª£ l√Ω AI tr·∫£ l·ªùi:"

    return prompt